---
import BaseLayout from './BaseLayout.astro'
import PostDate from '../components/PostDate.astro'
import type { CollectionEntry } from 'astro:content'

interface Props {
  entry: CollectionEntry<'diary'>
}

const { entry } = Astro.props
const { title, date, weather, image } = entry.data

// YouTubeのURLを埋め込みに変換する関数
function convertYoutubeLinks(content) {
  if (!content) return content;
  
  // YouTube URLを含むaタグを検出するための正規表現
  const youtubeRegex = /<a[^>]*href="(https?:\/\/(www\.)?youtube\.com\/watch\?v=([a-zA-Z0-9_-]{11}))"[^>]*>(.*?)<\/a>/g;
  const youtubeShortRegex = /<a[^>]*href="(https?:\/\/(www\.)?youtu\.be\/([a-zA-Z0-9_-]{11}))"[^>]*>(.*?)<\/a>/g;
  
  let processedContent = content;
  
  // 通常のYouTube URLを処理
  processedContent = processedContent.replace(youtubeRegex, (match, url, domain, videoId) => {
    return `<div class="youtube-embed my-6 w-full aspect-video rounded-xl overflow-hidden shadow-lg">
      <iframe src="https://www.youtube.com/embed/${videoId}" frameborder="0" 
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" 
        allowfullscreen class="w-full h-full"></iframe>
    </div>`;
  });
  
  // 短縮URLを処理
  processedContent = processedContent.replace(youtubeShortRegex, (match, url, domain, videoId) => {
    return `<div class="youtube-embed my-6 w-full aspect-video rounded-xl overflow-hidden shadow-lg">
      <iframe src="https://www.youtube.com/embed/${videoId}" frameborder="0" 
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" 
        allowfullscreen class="w-full h-full"></iframe>
    </div>`;
  });
  
  return processedContent;
}

// コンテンツを事前に処理
const content = await Astro.slots.render('default');
const processedContent = convertYoutubeLinks(content);
---

<BaseLayout title={title}>
  <article class="max-w-3xl mx-auto px-4">
    {image && <img src={image} alt={title} class="w-full h-[400px] object-cover rounded-xl shadow-lg mb-8" loading="eager" />}
    <header class="mb-12">
      <h1 class="text-4xl md:text-5xl font-bold mb-4 text-gray-900 dark:text-gray-100">
        {title}
      </h1>
      <div class="flex flex-col sm:flex-row gap-2 sm:gap-6 text-gray-600 dark:text-gray-300">
        <div class="flex items-center">
          <span class="font-semibold mr-2 min-w-[2.5em]">日付:</span>
          <span>{date.toLocaleDateString('ja-JP')}</span>
        </div>
        {weather && <div class="flex items-center">
          <span class="font-semibold mr-2 min-w-[2.5em]">天気:</span>
          <span>{weather}</span>
        </div>}
      </div>
    </header>
    <div
      class="prose prose-lg dark:prose-invert
      prose-headings:text-gray-900 dark:prose-headings:text-gray-100
      prose-p:text-gray-700 dark:prose-p:text-gray-300
      prose-a:text-primary-600 dark:prose-a:text-primary-400
      hover:prose-a:text-primary-500 dark:hover:prose-a:text-primary-300
      prose-strong:text-gray-900 dark:prose-strong:text-gray-100
      prose-code:text-gray-300 dark:prose-code:text-gray-400
      prose-blockquote:text-gray-700 dark:prose-blockquote:text-gray-300
      prose-span:text-gray-700 dark:prose-span:text-gray-300
      prose-li:text-gray-700 dark:prose-li:text-gray-300
      max-w-none"
      set:html={processedContent}
    >
    </div>
  </article>
</BaseLayout>
